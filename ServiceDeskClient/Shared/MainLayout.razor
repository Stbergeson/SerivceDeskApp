@inherits LayoutComponentBase
@inject NavigationManager nav
@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager

<PageTitle>ServiceDeskClient</PageTitle>

<div class="page">
    <div class="sidebar">
        <NavMenu />
    </div>

    <main>
        <div class="top-row px-4 auth">
            <LoginDisplay />
            <a href="https://docs.microsoft.com/aspnet/" target="_blank">About</a>
        </div>

        <article class="content px-4">
            @Body
        </article>
    </main>
</div>

@code {

    [CascadingParameter] protected Task<AuthenticationState> AuthState { get; set; }

    private HttpContextAccessor _httpContextAccessor = new();

    protected async override Task OnInitializedAsync()
    {
        base.OnInitialized();
        var user = (await AuthState).User;

        //redirect user if not logged in
        if (!user.Identity.IsAuthenticated)
        {
            nav.NavigateTo($"/Identity/Account/Login");
        }

        //if user is logged in confirm their tokens, otherwise log them out
        string bearerToken = _httpContextAccessor.HttpContext!.Request.Cookies["apiBearerToken"]!;
        string refreshToken = _httpContextAccessor.HttpContext!.Request.Cookies["apiRefreshToken"]!;

        if(bearerToken == null)
        {
            if(refreshToken != null)
            {
               

            }else{
                //sign the user out and redirect to login
                await SignInManager.SignOutAsync();
                nav.NavigateTo($"/Identity/Account/Login");
            }
        }
    }
}
